package direct.thither.onamove.pages;import direct.thither.onamove.App;import direct.thither.onamove.R;import direct.thither.onamove.comm.Comm;import direct.thither.onamove.properties.PropsHolder;import direct.thither.onamove.properties.Render;import direct.thither.onamove.viewers.Image;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.content.res.Resources;import android.graphics.Color;import android.graphics.Point;import android.graphics.Typeface;import android.net.Uri;import android.support.constraint.ConstraintLayout;import android.text.Html;import android.view.Display;import android.view.DragEvent;import android.view.LayoutInflater;import android.view.View;import android.widget.GridLayout;import android.widget.LinearLayout;import android.widget.ProgressBar;import android.widget.RelativeLayout;import android.widget.TextView;import android.widget.Toast;import org.json.JSONArray;import org.json.JSONObject;import java.util.ArrayList;import java.util.List;public class StoreInfo {    private PropsHolder m_props;    private Comm mComm;    private View m_vw;    private Resources m_res;    private Context m_ctx;    public Thread t;    private float max_x;    private float max_y;    public StoreInfo(Context ctx) {        m_ctx = ctx;        m_res = m_ctx.getResources();        m_props = App.getInstance().props;        mComm = App.getInstance().comm;        LayoutInflater li = (LayoutInflater) m_ctx.getSystemService(Context.LAYOUT_INFLATER_SERVICE);        m_vw = li.inflate(m_res.getLayout(R.layout.store_info), null);;        t = new Thread(new Runnable() {            public void run(){                Render render = new Render(){                    @Override                    public void data(JSONObject o){set_data(o);};                    @Override                    public void data(String s){set_data(s);};                };                m_props.renders.put("2", render);                bg();            }        });        t.start();        Display display = ((Activity)m_ctx).getWindowManager().getDefaultDisplay();        Point size = new Point();        display.getSize(size);        max_x = Float.parseFloat(Integer.toString(size.x));        max_y = Float.parseFloat(Integer.toString(size.y));    }    List<String> q_str = new ArrayList<>();    List<JSONObject> q_js = new ArrayList<>();    public synchronized void bg(){        while (Boolean.TRUE) {            try {                wait();            } catch (Exception e) {}            render();            ((Activity)m_ctx).runOnUiThread(new Runnable() {                public void run() {                    Toast.makeText(m_ctx, "store-info", Toast.LENGTH_LONG).show();                }});        }    }    public synchronized void set_data(String s) {        q_str.add(s);        notify();    }    public synchronized void set_data(JSONObject d) {        q_js.add(d);        notify();    }    private synchronized void render() {        while(!q_js.isEmpty())  { render_js(q_js.get(0));   q_js.remove(0);  }        while(!q_str.isEmpty()) { render_str(q_str.get(0)); q_str.remove(0); }        ((Activity)m_ctx).runOnUiThread(new Runnable() {            public void run() {                ProgressBar bar = m_props.get_progress_bar();                if(bar==null)return;                bar.setVisibility(View.GONE);                m_props.set_progress_bar(null);            }        });    }    private void render_js(final JSONObject d) {        try{            switch (d.getString("id")) {                case "store_info":{                    render_store_info(d.getJSONObject("info"),                            (RelativeLayout)m_vw.findViewById(R.id.store_info));                    break;                }            }        }catch (Exception e){}    }    private void render_store_info(JSONObject info, final RelativeLayout vw) {        final GridLayout container = new GridLayout(vw.getContext());        container.setPadding(0,0,0,100);        ((Activity)m_ctx).runOnUiThread(new Runnable() {            public void run() {                vw.removeAllViews();                vw.addView(container);                ConstraintLayout.LayoutParams p = new ConstraintLayout.LayoutParams(                        ConstraintLayout.LayoutParams.MATCH_PARENT,                        ConstraintLayout.LayoutParams.MATCH_PARENT);                if(((Activity) m_ctx).findViewById(R.id.store_info_overlay)==null)                    ((Activity) m_ctx).addContentView(m_vw, p);                m_vw.setVisibility(View.VISIBLE);            }});        final LinearLayout holder = new LinearLayout(container.getContext());        holder.setOrientation(LinearLayout.HORIZONTAL);        //holder.setBackground(m_res.getDrawable(R.drawable.products_item_wrap));        LinearLayout.LayoutParams p = new LinearLayout.LayoutParams(                LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT, 1.0f);        LinearLayout store_vw = new LinearLayout(container.getContext());        store_vw.setOrientation(LinearLayout.VERTICAL);        store_vw.setLayoutParams(p);        TextView s_name = new TextView(container.getContext());        s_name.setTextSize(18);        s_name.setBackgroundColor(Color.rgb(250,250,250));        s_name.setPadding(10, 10, 10, 10);        s_name.setLayoutParams(p);        s_name.setTypeface(s_name.getTypeface(), Typeface.BOLD);        try{s_name.setText(info.getJSONObject("name").getString("v"));}catch (Exception e){}        LinearLayout s_name_vw = new LinearLayout(container.getContext());        s_name_vw.setOrientation(LinearLayout.HORIZONTAL);        store_vw.addView(s_name_vw);        s_name_vw.addView(s_name);        try{            Image i_img = new Image(store_vw.getContext(),                    "https://thither.direct/images/"+info.getJSONObject("logo").getString("v"),                    "?sz=", 320,240);            s_name_vw.addView(i_img);            i_img.setRight(0);        }catch (Exception e){}        LinearLayout s_phones_vw = new LinearLayout(container.getContext());        s_phones_vw.setOrientation(LinearLayout.HORIZONTAL);        store_vw.addView(s_phones_vw);        try{            if(info.has("phones")) {                JSONArray phones = info.getJSONObject("phones").getJSONArray("list");                int c = phones.length();                TextView s_phone;                for(int i =0;i<c;i++) {                    s_phone = new TextView(container.getContext());                    s_phone.setTextSize(14);                    s_phone.setPadding(5,5,5,5);                    try {                        s_phone.setText(phones.getJSONObject(i).getString("v"));                        s_phone.setOnClickListener(new View.OnClickListener(){                            @Override                            public void onClick(View v){                                Intent intent = new Intent(Intent.ACTION_DIAL);                                intent.setData(Uri.parse("tel:" + ((TextView)v).getText()));                                m_ctx.startActivity(intent);                            }                        });                        s_phones_vw.addView(s_phone);                    } catch (Exception e) {                    }                } }}catch (Exception e){}        LinearLayout s_contacts_vw = new LinearLayout(container.getContext());        s_contacts_vw.setOrientation(LinearLayout.HORIZONTAL);        store_vw.addView(s_contacts_vw);        try{            if(info.has("emails")) {                JSONArray emails = info.getJSONObject("emails").getJSONArray("list");                int c = emails.length();                TextView s_email;                for(int i =0;i<c;i++) {                    s_email = new TextView(container.getContext());                    s_email.setTextSize(14);                    s_email.setPadding(5,5,5,5);                    try {                        s_email.setText(emails.getJSONObject(i).getString("v"));                        s_email.setOnClickListener(new View.OnClickListener(){                            @Override                            public void onClick(View v){                                Intent intent = new Intent(Intent.ACTION_SENDTO);                                Uri data = Uri.parse("mailto:"+((TextView)v).getText());                                intent.setData(data);                                m_ctx.startActivity(intent);                            }                        });                        s_contacts_vw.addView(s_email);                    } catch (Exception e) {                    }                } }}catch (Exception e){}        LinearLayout s_websites_vw = new LinearLayout(container.getContext());        s_websites_vw.setOrientation(LinearLayout.HORIZONTAL);        store_vw.addView(s_websites_vw);        try{            if(info.has("websites")) {                JSONArray websites = info.getJSONObject("websites").getJSONArray("list");                int c = websites.length();                TextView s_website;                for(int i =0;i<c;i++) {                    s_website = new TextView(container.getContext());                    s_website.setTextSize(14);                    s_website.setPadding(5,5,5,5);                    try {                        s_website.setText(websites.getJSONObject(i).getString("v"));                        s_website.setOnClickListener(new View.OnClickListener(){                            @Override                            public void onClick(View v){                                Intent intent = new Intent(Intent.ACTION_VIEW);                                Uri data = Uri.parse(""+((TextView)v).getText());                                intent.setData(data);                                m_ctx.startActivity(intent);                            }                        });                        s_websites_vw.addView(s_website);                    } catch (Exception e) {                    }                } }}catch (Exception e){}        TextView s_desc = new TextView(container.getContext());        s_desc.setTextSize(13);        s_desc.setBackgroundColor(Color.rgb(250,250,250));        s_desc.setPadding(10, 10, 10, 10);        s_desc.setTypeface(s_name.getTypeface(), Typeface.BOLD);        try{s_desc.setText(Html.fromHtml(info.getJSONObject("desc").getString("v")));}catch (Exception e){}        store_vw.addView(s_desc);        holder.addView(store_vw);        ((Activity)m_ctx).runOnUiThread(new Runnable() {            public void run() {                GridLayout.LayoutParams p = new GridLayout.LayoutParams(                        GridLayout.spec(0), GridLayout.spec(0));                p.setMargins(30,30,30,30);                container.addView(holder, p);            }        });        vw.setOnDragListener(new View.OnDragListener() {            @Override            public boolean onDrag(View v, DragEvent event) {                /*Toast.makeText(m_ctx,                        "store-info: " +                                "x:"+Float.toString(event.getX()) +                                "y:"+Float.toString(event.getY()),                        Toast.LENGTH_LONG).show();*/                if(event.getX()==0&&event.getY()==0)return true;                if(event.getX()<50f||event.getY()<50f||                        event.getY()>max_y-50f||event.getX()>max_x-50f)                    close_view(vw);                return true;            }        });        vw.setOnLongClickListener(new View.OnLongClickListener() {            @Override            public boolean onLongClick(final View v) {                View.DragShadowBuilder shadowBuilder = new View.DragShadowBuilder(v);                v.startDrag(null, shadowBuilder, v, 0);                return true;            }        });    }    private void render_str(String s) {        if(s==null)return;    }    private void close_view(final RelativeLayout vw){        vw.setOnDragListener(null);        ((Activity)m_ctx).runOnUiThread(new Runnable() {            public void run() {                m_vw.setVisibility(View.GONE);                vw.removeAllViews();            }        });}}